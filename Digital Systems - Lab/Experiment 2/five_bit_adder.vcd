$date
	Tue Jan 29 14:40:10 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module test_5bit_adder $end
$var wire 5 ! sum [4:0] $end
$var wire 1 " cout $end
$var reg 1 # cin $end
$var reg 5 $ i1 [4:0] $end
$var reg 5 % i2 [4:0] $end
$scope module DUT $end
$var wire 1 # cin $end
$var wire 5 & i1 [4:0] $end
$var wire 5 ' i2 [4:0] $end
$var wire 5 ( sum [4:0] $end
$var wire 1 " cout $end
$var wire 1 ) C4 $end
$var wire 1 * C3 $end
$var wire 1 + C2 $end
$var wire 1 , C1 $end
$scope module fa1 $end
$var wire 1 + cout $end
$var wire 1 - i1 $end
$var wire 1 . i2 $end
$var wire 1 / sum $end
$var wire 1 0 t1 $end
$var wire 1 1 t2 $end
$var wire 1 2 t3 $end
$var wire 1 , cin $end
$upscope $end
$scope module fa2 $end
$var wire 1 + cin $end
$var wire 1 * cout $end
$var wire 1 3 i1 $end
$var wire 1 4 i2 $end
$var wire 1 5 sum $end
$var wire 1 6 t1 $end
$var wire 1 7 t2 $end
$var wire 1 8 t3 $end
$upscope $end
$scope module fa3 $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 9 i1 $end
$var wire 1 : i2 $end
$var wire 1 ; sum $end
$var wire 1 < t1 $end
$var wire 1 = t2 $end
$var wire 1 > t3 $end
$upscope $end
$scope module fa4 $end
$var wire 1 ) cin $end
$var wire 1 " cout $end
$var wire 1 ? i1 $end
$var wire 1 @ i2 $end
$var wire 1 A sum $end
$var wire 1 B t1 $end
$var wire 1 C t2 $end
$var wire 1 D t3 $end
$upscope $end
$scope module ha0 $end
$var wire 1 , cout $end
$var wire 1 E i1 $end
$var wire 1 F i2 $end
$var wire 1 G sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1G
0F
1E
0D
0C
1B
0A
1@
1?
0>
0=
0<
0;
0:
09
08
07
06
15
04
13
02
01
00
1/
1.
0-
0,
0+
0*
0)
b111 (
b10010 '
b10101 &
b10010 %
b10101 $
0#
1"
b111 !
$end
#100
